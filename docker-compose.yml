# docker compose -f docker-compose-agent-ipfs.yml up --build -d

##################################################################################
## Docker-Compose for a Single agent + Single IPFS node
##
## Agent: alice
## Ports:
##    Alice   = 3000 / 5002 (HTTP) & 5003 (WS)
##    IPFS    = 8080 (HTTP)
## Network: testnet
##
##################################################################################

services:
  ##################################################################################
  ## Alice #########################################################################
  ##################################################################################

  alice:
    container_name: alice
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    scale: 0
    depends_on:
      ipfs:
        condition: service_healthy
    ports:
      - '5002:5002' #5000 is used for AirPlay in MacOS
      - '5003:5003'
      - '3000:3000'
      - '8443:8443'
    command: >
      sh -c "
        npm i -g pino-pretty
        node ./node_modules/.bin/knex migrate:latest
        npm start | pino-pretty -c -S"
    environment:
      - ENDPOINT='http://alice:5002, ws://alice:5003'
      - IPFS_ORIGIN=http://ipfs:5001
      - POSTGRES_HOST=veritable-cloudagent-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=postgres
      - DID_WEB_ENABLED=true
      - DID_WEB_USE_DEV_CERT=true
      - DID_WEB_PORT=8443
      - DID_WEB_DEV_CERT_PATH=/localhost.pem
      - DID_WEB_DEV_KEY_PATH=/localhost-key.pem
      - DID_WEB_DB_NAME=did-web-server
      - DID_WEB_DOMAIN=localhost:8443
    networks:
      - testnet
    volumes:
      - ./localhost.pem:/localhost.pem
      - ./localhost-key.pem:/localhost-key.pem
      - ./dids/alice:/dids

  ##################################################################################
  ## IPFS ##########################################################################
  ##################################################################################

  ipfs:
    container_name: ipfs
    image: ipfs/kubo:release
    ports:
      #     - "4001:4001" # ipfs swarm - expose if needed/wanted
      #     - "5001:5001" # ipfs api - expose if needed/wanted
      - '8080:8080' # ipfs gateway - expose if needed/wanted
    volumes:
      - ipfs:/data/ipfs
    networks:
      - testnet

  ##################################################################################
  ## PostgreSQL ####################################################################
  ##################################################################################

  postgres:
    container_name: veritable-cloudagent-postgres
    image: postgres:17.6-alpine
    restart: on-failure
    ports:
      - 5432:5432
    volumes:
      - veritable-cloudagent-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=did-web-server
    networks:
      - testnet
volumes:
  ipfs:
  veritable-cloudagent-storage:

networks:
  testnet:
    name: testnet
    driver: bridge
